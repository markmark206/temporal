// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: option1.proto

package option1

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ContinueAsNewInitiator int32

const (
	ContinueAsNewInitiator_CONTINUE_AS_NEW_INITIATOR_UNSPECIFIED ContinueAsNewInitiator = 0
	ContinueAsNewInitiator_DECIDER                               ContinueAsNewInitiator = 1
	ContinueAsNewInitiator_RETRY                                 ContinueAsNewInitiator = 2
	ContinueAsNewInitiator_CRON_SCHEDULE                         ContinueAsNewInitiator = 3
)

var ContinueAsNewInitiator_name = map[int32]string{
	0: "CONTINUE_AS_NEW_INITIATOR_UNSPECIFIED",
	1: "DECIDER",
	2: "RETRY",
	3: "CRON_SCHEDULE",
}

var ContinueAsNewInitiator_value = map[string]int32{
	"CONTINUE_AS_NEW_INITIATOR_UNSPECIFIED": 0,
	"DECIDER":                               1,
	"RETRY":                                 2,
	"CRON_SCHEDULE":                         3,
}

func (x ContinueAsNewInitiator) String() string {
	return proto.EnumName(ContinueAsNewInitiator_name, int32(x))
}

func (ContinueAsNewInitiator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1cb1455fa2f04e13, []int{0}
}

func init() {
	proto.RegisterEnum("option1.ContinueAsNewInitiator", ContinueAsNewInitiator_name, ContinueAsNewInitiator_value)
}

func init() { proto.RegisterFile("option1.proto", fileDescriptor_1cb1455fa2f04e13) }

var fileDescriptor_1cb1455fa2f04e13 = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x2c, 0xce, 0x31, 0x4b, 0xc4, 0x30,
	0x14, 0x00, 0xe0, 0x46, 0xd1, 0xc3, 0xc8, 0x41, 0x8d, 0xe0, 0x98, 0xcd, 0x41, 0x87, 0x82, 0x38,
	0x3a, 0xf5, 0xd2, 0x27, 0x3e, 0x90, 0xd7, 0x92, 0xb6, 0x88, 0x53, 0xa8, 0xd0, 0x21, 0xe0, 0xe5,
	0x95, 0x5e, 0xc4, 0xbf, 0xe1, 0xcf, 0x72, 0xbc, 0xd1, 0x51, 0xda, 0x3f, 0x22, 0x1e, 0x1d, 0xbf,
	0xed, 0x93, 0x6b, 0x1e, 0xa2, 0xe7, 0x70, 0x97, 0x0d, 0x23, 0x47, 0x56, 0xab, 0x85, 0xb7, 0x41,
	0x5e, 0x19, 0x0e, 0xd1, 0x87, 0x8f, 0x3e, 0xdf, 0x51, 0xff, 0x89, 0xc1, 0x47, 0xdf, 0x45, 0x1e,
	0xd5, 0x8d, 0xbc, 0x36, 0x25, 0x35, 0x48, 0x2d, 0xb8, 0xbc, 0x76, 0x04, 0x2f, 0x0e, 0x09, 0x1b,
	0xcc, 0x9b, 0xd2, 0xba, 0x96, 0xea, 0x0a, 0x0c, 0x3e, 0x22, 0x14, 0x69, 0xa2, 0xce, 0xe5, 0xaa,
	0x00, 0x83, 0x05, 0xd8, 0x54, 0xa8, 0x33, 0x79, 0x62, 0xa1, 0xb1, 0xaf, 0xe9, 0x91, 0xba, 0x90,
	0x6b, 0x63, 0x4b, 0x72, 0xb5, 0x79, 0x82, 0xa2, 0x7d, 0x86, 0xf4, 0x78, 0xf3, 0xf0, 0x3d, 0x69,
	0xb1, 0x9f, 0xb4, 0xf8, 0x9d, 0xb4, 0xf8, 0x9a, 0x75, 0xb2, 0x9f, 0x75, 0xf2, 0x33, 0xeb, 0x44,
	0x5e, 0x7a, 0xce, 0x62, 0xbf, 0x1d, 0x78, 0xec, 0xde, 0xb3, 0xa5, 0xb7, 0x91, 0xd5, 0x7f, 0x97,
	0xba, 0x6d, 0xbf, 0xab, 0xc4, 0xdb, 0xe9, 0x21, 0x7f, 0xff, 0x17, 0x00, 0x00, 0xff, 0xff, 0x0e,
	0x13, 0xfb, 0xea, 0xcd, 0x00, 0x00, 0x00,
}
